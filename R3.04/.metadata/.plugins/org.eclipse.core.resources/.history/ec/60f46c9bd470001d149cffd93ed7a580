import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class PlatCuisine {

	public PlatCuisine() {
		// TODO Auto-generated constructor stub
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	private String libelle;
	private List<Ingredients> _mesIngredients= new ArrayList<Ingredients>();
	
	public List<Ingredients> getListIngredients(){
		return this._mesIngredients;
	}
	public String getLibelle() {
		return "Libelle de la classe PlatCuisine : "+ this.libelle;
	}
	
	/*Premiere facon de parcourir le ArrayList mesIngredients*/
	public String toString1() {
		String message = "Le libelle est "+ getLibelle();
		if(!getListIngredients().isEmpty()) {
			for(int i =0 ; i < _mesIngredients.size();i++) { // Tant que i n'est pas a la fin de la taille du nombre contenue dans la liste
				message += getListIngredients().get(i).getLibelle();
			}			
		}
		return message;
	}
	/*Deuxieme facon de parcourir le ArrayList mesIngredients
	 * LA FACON MODERNE */
	public String toString2() {
		String message = "Le libelle est "+getLibelle();
		if(!getListIngredients().isEmpty()) {
			for(Ingredients ingredient : _mesIngredients) {
				message =ingredient.getLibelle();
			}
		}
		return message;
	}
	/*Troisieme facon de parcourir le ArrayList mesIngredients*/
	public String toString3() {
		String message = "Le libelle est "+getLibelle();
		if(!getListIngredients().isEmpty()) {
			Iterator<Ingredients> it = _mesIngredients.iterator(); // On declare et initialise un iterateur qui pointe vers la liste des ingredients 
			while(it.hasNext()) { // Tant que l'iterateur peut aller au suivant alors 
				message +=it.next().getLibelle();
			}
		}
		return message;
	}


}
